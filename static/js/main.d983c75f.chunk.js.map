{"version":3,"sources":["redux/actions.js","redux/reducers/fetchData.js","redux/reducers/index.js","redux/store.js","redux/selectors.js","components/List.js","components/Recommandation.js","components/MyList.js","index.js"],"names":["fetchList","dispatch","type","fetch","then","res","json","error","list","mylist","recommendation","recommendations","catch","fetchError","initialState","pending","combineReducers","fetchData","state","action","remove_id","id","remove_obj","filter","item","add_id","add_obj","loggerMiddleware","createLogger","getList","getRecommendation","getPending","getError","connect","deleteMyList","props","className","map","key","src","img","alt","title","onClick","addToMyList","preloadedState","bindActionCreators","useEffect","message","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d983c75f.chunk.js","sourcesContent":["export const FETCH_PENDING = 'FETCH_PENDING';\nexport const FETCH_ERROR = 'FETCH_ERROR';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const REMOVE_FROM_MY_LIST = \"REMOVE_FROM_MY_LIST\";\nexport const ADD_TO_MY_LIST = \"ADD_TO_MY_LIST\";\n\n\nexport function fetchPending() {\n  return {\n    type: FETCH_PENDING\n  };\n}\n\nexport function fetchError(error) {\n  return {\n    type: FETCH_ERROR,\n    error: error\n  };\n}\n\nexport function fetchSuccess(list) {\n  return {\n    type: FETCH_SUCCESS,\n    list: list.mylist,\n    recommendation: list.recommendations\n  };\n}\n\nexport function fetchList() {\n  return dispatch => {\n    dispatch(fetchPending());\n    fetch('https://4612cd5d-6a03-4ed3-b98d-572baf71b15b.mock.pstmn.io/netflix_mylist')\n    .then(res => res.json())\n    .then(res => {\n      if (res.error) {\n        throw(res.error);\n      }\n\n      dispatch(fetchSuccess(res));\n      return res;\n    })\n    .catch(error => {\n      dispatch(fetchError(error));\n    })\n  }\n}\n\nexport function deleteMyList(id) {\n  return {\n    type: REMOVE_FROM_MY_LIST,\n    id: id\n  };\n}\n\nexport function addToMyList(id) {\n  return {\n    type: ADD_TO_MY_LIST,\n    id: id\n  };\n}","import { FETCH_ERROR,\n  FETCH_PENDING,\n  FETCH_SUCCESS,\n  REMOVE_FROM_MY_LIST,\n  ADD_TO_MY_LIST } from '../actions';\n\nconst initialState = {\n  pending: false,\n  list: [],\n  recommendation: [],\n  error: null\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ERROR: {\n      return {\n        ...state,\n        pending: false,\n        error: action.error\n      };\n    }\n\n    case FETCH_PENDING: {\n      return {\n        ...state,\n        pending:true\n      };\n    }\n\n    case FETCH_SUCCESS: {\n      return {\n        ...state,\n        pending: false,\n        list: action.list,\n        recommendation: action.recommendation\n      };\n    }\n\n    case REMOVE_FROM_MY_LIST: {\n      const remove_id = action.id;\n      const remove_obj = state.list.filter(item => item.id === remove_id);\n      return {\n        ...state,\n        list: state.list.filter(item => item.id !== remove_id),\n        recommendation: [...state.recommendation, ...remove_obj]\n      };\n    }\n\n    case ADD_TO_MY_LIST: {\n      const add_id = action.id;\n      const add_obj = state.recommendation.filter(item => item.id === add_id);\n      return {\n        ...state,\n        recommendation: state.recommendation.filter(item => item.id !== add_id),\n        list: [...state.list, ...add_obj]\n      };\n    }\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport fetchData from './fetchData';\n\nexport default combineReducers(\n  {\n    fetchData,\n  }\n);","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\n  );\n}\n","export const getList = state => state.fetchData.list;\n\nexport const getRecommendation = state => state.fetchData.recommendation;\n\nexport const getPending = state => state.fetchData.pending;\n\nexport const getError = state => state.fetchData.error;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteMyList } from '../redux/actions';\n\nfunction List (props) {\n  return (\n    <div className=\"myList\">\n      {props.list.map(mylist => {\n        return (\n          <figure key={mylist.id} className=\"figure-mylist\">\n            <img src={mylist.img} alt={mylist.id} />\n            <figcaption>{mylist.title}</figcaption>\n            <button\n              className=\"btn\"\n              onClick={() => props.deleteMyList(mylist.id)}>\n              Remove\n            </button>\n          </figure>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default connect (\n  null,\n  {deleteMyList}\n)(List);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToMyList } from '../redux/actions'\n\nfunction Recommandation (props) {\n  return (\n    <div className=\"myList\">\n    {props.recommendation.map(mylist => {\n      return (\n        <figure key={mylist.id} className=\"figure-mylist\">\n          <img src={mylist.img} alt={mylist.id} />\n          <figcaption>{mylist.title}</figcaption>\n          <button\n            className=\"btn\"\n            onClick={() => props.addToMyList(mylist.id)}>\n            Add\n          </button>\n        </figure>\n      );\n    })}\n    </div>\n  );\n}\n\nexport default connect (\n  null,\n  {addToMyList}\n)(Recommandation);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getList, getRecommendation, getPending, getError } from '../redux/selectors';\nimport { fetchList } from '../redux/actions';\nimport List from './List';\nimport Recommandation from './Recommandation';\n\n// Hooks;\n\nfunction MyList(props) {\n  const { fetchList, list, error, recommendation, pending } = props;\n  useEffect(() => {\n    fetchList();\n  }, [fetchList]);\n\n  if (pending) {\n    return (<p>Pending...</p>);\n  } else if (error) {\n    return (<p>Loading Error! {error.message}</p>);\n  }\n\n  return (\n    <div>\n      <div className=\"bar\">\n        <img\n          src=\"https://www.stickpng.com/assets/images/580b57fcd9996e24bc43c529.png\"\n          alt=\"netflix-icon\">\n        </img>\n      </div>\n      <div className=\"list-header\">\n        <h2>My List</h2>\n      </div>\n      <List list={list} />\n      <div className=\"list-header\">\n        <h2>Recommandation</h2>\n      </div>\n      <Recommandation recommendation= {recommendation} />\n      <div className=\"bottom-bar\">\n        <h4 className=\"bottom-header\">My List : </h4>\n        {list.map(item => (<a key={item.id}>{item.title}</a>))}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  pending: getPending(state),\n  list: getList(state),\n  recommendation: getRecommendation(state),\n  error: getError(state)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchList: fetchList\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyList);\n\n// class MyList extends React.Component {\n//   componentDidMount() {\n//     this.props.dispatch(fetchList());\n//   }\n// \n//   render() {\n//     const { pending, list, recommendation, error } = this.props;\n//     if (pending) {\n//       return (<p>Pending...</p>);\n//     } else if (error) {\n//       return (<p>Loading Error! {error.message}</p>);\n//     }\n// \n//     return (\n//       <div>\n//         <div className=\"bar\">\n//           <img\n//             src=\"https://www.stickpng.com/assets/images/580b57fcd9996e24bc43c529.png\"\n//             alt=\"netflix-icon\">\n//           </img>\n//         </div>\n//         <div className=\"list-header\">\n//           <h2>My List</h2>\n//         </div>\n//         <List list={list} />\n//         <div className=\"list-header\">\n//           <h2>Recommandation</h2>\n//         </div>\n//         <Recommandation recommendation= {recommendation} />\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport MyList from './components/MyList'\n// import App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store = {store}>\n    <MyList />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}